{
    "name": "@valkey/valkey-glide",
    "description": "General Language Independent Driver for the Enterprise (GLIDE) for Valkey",
    "main": "build-ts/src/index.js",
    "module": "build-ts/src/index.js",
    "types": "build-ts/src/index.d.ts",
    "exports": {
        ".": {
            "require": "./build-ts/src/index.js",
            "import": "./build-ts/src/index.js",
            "types": "./build-ts/src/index.d.ts"
        }
    },
    "files": [
        "build-ts/**",
        "types/**",
        "dist/**"
    ],
    "type": "commonjs",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/valkey-io/valkey-glide.git"
    },
    "homepage": "https://github.com/valkey-io/valkey-glide#readme",
    "dependencies": {
        "long": "5",
        "protobufjs": "7"
    },
    "scripts": {
        "build": "npm run prereq && npm run build:rust-client:dev && npm run build-protobuf && npm run build:ts",
        "build:release": "npm run prereq && npm run build:rust-client:release && npm run build-protobuf && npm run build:ts:release",
        "build:benchmark": "npm run prereq && npm run build:rust-client:benchmark && npm run build-protobuf && npm run build:ts",
        "build:rust-client:dev": "cd rust-client && npm run build:dev",
        "build:rust-client:release": "cd rust-client && npm run build:release:gnu",
        "build:rust-client:benchmark": "cd rust-client && npm run build:benchmark",
        "build:ts": "rm -rf build-ts && tsc && npm run copy-protobuf-type",
        "build:ts:release": "rm -rf build-ts && tsc --stripInternal && npm run copy-protobuf-type",
        "build-protobuf": "npm run compile-protobuf-files && npm run fix-protobuf-file",
        "compile-protobuf-files": "pbjs -t static-module -w commonjs -o src/ProtobufMessage.js ../glide-core/src/protobuf/*.proto && pbts -o src/ProtobufMessage.d.ts src/ProtobufMessage.js",
        "copy-protobuf-type": "mkdir -p build-ts/src && cp src/ProtobufMessage.d.ts build-ts/src/ProtobufMessage.d.ts",
        "fix-protobuf-file": "replace 'this\\.encode\\(message, writer\\)\\.ldelim' 'this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim' src/ProtobufMessage.js",
        "clean": "rm -rf build-ts dist/*/target node_modules rust-client/node_modules */node_modules rust-client/target glide-logs rust-client/glide-rs.*.node src/glide-rs.*.node rust-client/index.* src/ProtobufMessage.* *.tsbuildinfo test-report*.html yarn.lock package-lock.json rust-client/package-lock.json rust-client/Cargo.lock",
        "clean:deep": "npm run clean && find . -name 'node_modules' -type d -prune -exec rm -rf {} + 2>/dev/null || true && find . -name '*.node' -type f -delete && find . -name 'target' -type d -not -path './docs/*' -prune -exec rm -rf {} + 2>/dev/null || true && find . -name '*.log' -type f -delete && find . \\( -name 'package-lock.json' -o -name 'yarn.lock' -o -name 'Cargo.lock' \\) -type f -delete",
        "test": "npm run build-test-utils && jest --verbose --testPathIgnorePatterns='ServerModules'",
        "test-local": "npm run build-test-utils && jest --verbose --testPathIgnorePatterns='Validation of Exported Symbols' --testPathIgnorePatterns='ServerModules'",
        "test-dbg": "npm run build-test-utils && jest --runInBand",
        "test-minimum": "npm run build-test-utils && jest --verbose --runInBand --testNamePattern='^(.(?!(GlideJson|GlideFt|pubsub|kill)))*$'",
        "test-modules": "npm run build-test-utils && jest --verbose --runInBand --testNamePattern='(GlideJson|GlideFt)'",
        "build-test-utils": "cd ../utils && npm i && npm run build",
        "repl": "npx ts-node --project tsconfig.json",
        "lint": "npm run install-linting && npx eslint -c ../eslint.config.mjs && npm run prettier:check:ci",
        "lint:fix": "npm run install-linting && npx eslint -c ../eslint.config.mjs --fix && npm run prettier:format",
        "install-linting": "cd ../ && npm install",
        "prettier:check:ci": "npx prettier --check . --ignore-unknown '!**/*.{js,d.ts}'",
        "prettier:format": "npx prettier --write . --ignore-unknown '!**/*.{js,d.ts}'",
        "prepack": "npmignore --auto",
        "prereq": "npm install",
        "prepublishOnly": "cd rust-client && npm run prepublishOnly && cd .. && npm run build:release"
    },
    "devDependencies": {
        "@jest/globals": "29",
        "@types/jest": "29",
        "@types/minimist": "1",
        "@types/semver": "7",
        "@types/uuid": "10.0.0",
        "detect-libc": "2",
        "find-free-port": "2.0.0",
        "jest": "29",
        "jest-html-reporter": "4",
        "npmignore": "0.3",
        "protobufjs-cli": "1",
        "replace": "1",
        "semver": "7",
        "ts-jest": "29",
        "ts-node": "10",
        "typedoc": "0.28",
        "typedoc-plugin-markdown": "4",
        "typescript": "5",
        "uuid": "11"
    },
    "author": "Valkey GLIDE Maintainers",
    "license": "Apache-2.0",
    "publishConfig": {
        "${registry_scope}registry": "https://registry.npmjs.org/",
        "ignore": [
            "src/**",
            "tests/",
            "rust-client/**",
            "!build-ts/**",
            ".prettierignore",
            "jest.config.js",
            "hybrid-node-tests/**",
            "docs/",
            "DEVELOPER.md",
            ".ort.yml",
            "tsconfig.json",
            "THIRD_PARTY_LICENSES_NODE"
        ]
    },
    "engines": {
        "node": ">=16"
    },
    "//": [
        "The fields below have been commented out and are only necessary for publishing the package."
    ],
    "///cpu": [
        "${node_arch}"
    ],
    "///os": [
        "${node_os}"
    ],
    "///name": "${scope}${pkg_name}",
    "///version": "${package_version}",
    "//libc": "${libc}"
}
