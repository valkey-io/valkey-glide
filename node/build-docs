#!/bin/bash
npm install --save-dev typedoc
typedoc src/BaseClient.ts                   \
        src/Transaction.ts                  \
        src/GlideClient.ts                  \
        src/GlideClusterClient.ts           \
        src/Errors.ts                       \
        src/Commands.ts                     \
        src/Logger.ts                       \
        src/server-modules/GlideFt.ts       \
        src/server-modules/FtOptions.ts     \
        src/server-modules/GlideJson.ts     \
        --plugin typedoc-plugin-markdown    \
        --disableSources                    \
        --includeHierarchySummary           \
        --out ../docs/markdown/node/
Create a temporary Node.js script for link conversion
This is a workaround to convert the links with the @link syntax to markdown links
cat > convert-links.mjs << 'EOL'
import * as fs from 'fs';
import * as path from 'path';
import { fileURLToPath } from 'url';
import { dirname } from 'path';
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const docsDirectory = '../docs/markdown/node';
function convertLinksInFile(filePath) {
    const content = fs.readFileSync(filePath, 'utf8');
    console.log('Processing file:', filePath);
    
        const regex = /\[(https:\/\/[^|]+)\|([^\]]+)\]\((https:\/\/[^|]+)\|([^)]+)\)/g;
        let updatedContent = content.replace(regex, '[$2]($1)');

        // Clean up stray backslashes before closing parens
        updatedContent = updatedContent.replace(/\\(?=\))/g, '');
    
    fs.writeFileSync(filePath, updatedContent);
}
function processDirectory(directory) {
    const files = fs.readdirSync(directory);
    files.forEach(file => {
        const fullPath = path.join(directory, file);
        const stat = fs.statSync(fullPath);
        if (stat.isDirectory()) {
            processDirectory(fullPath);
        } else if (path.extname(file) === '.md') {
            convertLinksInFile(fullPath);
        }
    });
}
processDirectory(docsDirectory);
EOL
# Run the conversion script
node convert-links.mjs
# Clean up the temporary script
rm convert-links.mjs
