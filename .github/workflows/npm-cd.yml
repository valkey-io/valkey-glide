name: NPM - Continuous Deployment

on:
    pull_request:
        paths:
            - .github/workflows/npm-cd.yml
            - .github/workflows/build-node-wrapper/action.yml
            - .github/workflows/install-rust-and-protoc/action.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/install-engine/action.yml
            - .github/json_matrices/**
            - .github/workflows/create-test-matrices/action.yml
            - .github/workflows/CD-NPM/**
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:
        inputs:
            version:
                description: "The release version of GLIDE, formatted as *.*.* or *.*.*-rc*"
                required: true
            publish:
                description: "Publish"
                required: true
                type: boolean
                default: false

concurrency:
    group: node-cd-${{ github.head_ref || github.ref }}-${{ toJson(inputs) }}
    cancel-in-progress: true

permissions:
    id-token: write

jobs:
    checkout:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
    determine-version:
        uses: ./.github/workflows/CD-NPM/determine-version.yml
        needs: checkout
        with:
            event_name: ${{ github.event_name }}
            version: ${{ github.event.inputs.version }}
            ref: ${{ github.ref }}

    load-platform-matrix:
        uses: ./.github/workflows/CD-NPM/load-platform-matrix.yml
        needs: checkout

    build-binaries:
        needs: [determine-version, load-platform-matrix]
        uses: ./.github/workflows/CD-NPM/build-binaries.yml
        with:
            release_version: ${{ needs.determine-version.outputs.release_version }}
            npm_tag: ${{ needs.determine-version.outputs.npm_tag }}
            platform_matrix: ${{ needs.load-platform-matrix.outputs.platform_matrix }}
        secrets:
            npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN }}
            github_token: ${{ secrets.GITHUB_TOKEN }}

    organize-artifacts:
        needs: [build-binaries, determine-version]
        uses: ./.github/workflows/CD-NPM/organize-artifacts.yml
        with:
            release_version: ${{ needs.determine-version.outputs.release_version }}
            npm_tag: ${{ needs.determine-version.outputs.npm_tag }}

    publish-platform-packages:
        needs: [organize-artifacts, determine-version]
        uses: ./.github/workflows/CD-NPM/publish-platform-packages.yml
        with:
            release_version: ${{ needs.determine-version.outputs.release_version }}
            npm_tag: ${{ needs.determine-version.outputs.npm_tag }}
            publish: ${{ github.event_name == 'push' || github.event.inputs.publish == true }}
            npm_scope: ${{ vars.NPM_SCOPE }}
            artifact_name: organized-node-artifacts
        secrets:
            npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN }}

    publish-base-package:
        needs: [publish-platform-packages, determine-version]
        uses: ./.github/workflows/CD-NPM/publish-base-package.yml
        with:
            release_version: ${{ needs.determine-version.outputs.release_version }}
            npm_tag: ${{ needs.determine-version.outputs.npm_tag }}
            publish: ${{ github.event_name == 'push' || github.event.inputs.publish == true }}
            npm_scope: ${{ vars.NPM_SCOPE }}
        secrets:
            npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN }}

    test-release:
        needs: [publish-base-package, determine-version, load-platform-matrix]
        uses: ./.github/workflows/CD-NPM/test-release.yml
        with:
            release_version: ${{ needs.determine-version.outputs.release_version }}
            npm_tag: ${{ needs.determine-version.outputs.npm_tag }}
            platform_matrix: ${{ needs.load-platform-matrix.outputs.platform_matrix }}
            npm_scope: ${{ vars.NPM_SCOPE }}
            publish: ${{ github.event_name == 'push' || github.event.inputs.publish == true }}
        secrets:
            npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN }}
            github_token: ${{ secrets.GITHUB_TOKEN }}
