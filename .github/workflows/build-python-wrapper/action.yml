name: Build Python wrapper

inputs:
    os:
        description: "The current operating system"
        required: true
        type: string
        options:
            - amazon-linux
            - macos
            - ubuntu
    target:
        description: "Specified target for rust toolchain, ex. x86_64-apple-darwin"
        type: string
        required: true
    engine-version:
        description: "Engine version to install"
        required: false
        type: string
    publish:
        description: "Enable building the wrapper in release mode"
        required: false
        type: boolean
        default: "false"
    github-token:
        description: "GITHUB_TOKEN, GitHub App installation access token"
        required: true
        type: string
env:
    CARGO_TERM_COLOR: always

runs:
    using: "composite"
    steps:
        - name: Install shared software dependencies
          uses: ./.github/workflows/install-shared-dependencies
          with:
              os: ${{ inputs.os }}
              target: ${{ inputs.target }}
              github-token: ${{ inputs.github-token }}
              engine-version: ${{ inputs.engine-version }}

        - name: Install Python software dependencies
          shell: bash
          env:
              OS: ${{ inputs.os }}
          run: |
              # Disregarding PEP 668 as it addresses package managers conflicts, which is not applicable in the CI scope.
              INSTALL_FLAGS=`if [[ "$OS" =~ .*"macos".*  ]]; then echo "--break-system-packages"; else echo ""; fi`
              python3 -m ensurepip --upgrade || true
              python3 -m pip install --upgrade pip $INSTALL_FLAGS
              python3 -m pip install virtualenv mypy-protobuf $INSTALL_FLAGS

        - name: Build GLIDE
          shell: bash
          working-directory: ./python
          if: ${{ inputs.publish != 'true' }}
          run: |
              python3 dev.py build --no-cache
