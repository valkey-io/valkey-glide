inputs:
    language-name:
        description: "Language name"
        required: true
        type: choice
        options:
            - java
            - node
            - python
            - go
            - C#
    run-full-matrix:
        description: "Run the full matrix"
        required: true
        type: boolean
    containers:
        description: "Run in containers"
        required: true
        default: false
        type: boolean

outputs:
    engine-matrix-output:
        description: "Engine matrix"
        value: ${{ steps.load-engine-matrix.outputs.engine-matrix }}
    host-matrix-output:
        description: "Host matrix"
        value: ${{ steps.load-host-matrix.outputs.host-matrix }}
    version-matrix-output:
        description: "Version matrix"
        value: ${{ steps.create-lang-version-matrix.outputs.version-matrix }}

runs:
    using: "composite"
    steps:
        - name: "Setup Environment Variables"
          shell: bash
          env:
              EVENT_NAME: ${{ github.event_name }}
              RUN_FULL_MATRIX: ${{ inputs.run-full-matrix }}
              CONTAINERS: ${{ inputs.containers }}
              LANGUAGE_NAME: ${{ inputs.language-name }}
          run: |
              echo "EVENT_NAME=$EVENT_NAME" >> $GITHUB_ENV
              echo "RUN_FULL_MATRIX=$RUN_FULL_MATRIX" >> $GITHUB_ENV
              echo "CONTAINERS=$CONTAINERS" >> $GITHUB_ENV
              echo "LANGUAGE_NAME=$LANGUAGE_NAME" >> $GITHUB_ENV

        - name: Load engine matrix
          id: load-engine-matrix
          shell: bash
          run: |
              set -o pipefail
              echo 'Select server engines to run tests against'
              if [[ "$EVENT_NAME" == "pull_request" || "$EVENT_NAME" == "push" || "$RUN_FULL_MATRIX" == "false" ]]; then
                  echo 'Pick engines marked as `"run": "always"` only - on PR, push or manually triggered job which does not require full matrix'
                  jq -c '[.[] | select(.run == "always")]' < .github/json_matrices/engine-matrix.json | awk '{ printf "engine-matrix=%s\n", $0 }' | tee -a $GITHUB_OUTPUT
              else
                  echo 'Pick all engines - on cron (schedule) or if manually triggered job requires a full matrix'
                  jq -c . < .github/json_matrices/engine-matrix.json | awk '{ printf "engine-matrix=%s\n", $0 }' | tee -a $GITHUB_OUTPUT
              fi

        - name: Load host matrix
          id: load-host-matrix
          shell: bash
          run: |
              set -o pipefail
              [[ "$CONTAINERS" == "true" ]] && CONDITION=".IMAGE?" || CONDITION=".IMAGE == null"
              echo 'Select runners (VMs) to run tests on'
              if [[ "$EVENT_NAME" == "pull_request" || "$EVENT_NAME" == "push" || "$RUN_FULL_MATRIX" == "false" ]]; then
                  echo 'Pick runners marked as '"run": "always"' only - on PR, push or manually triggered job which does not require full matrix'
                  jq -c '[.[] | select(.run == "always")]' < .github/json_matrices/build-matrix.json | awk '{ printf "host-matrix=%s\n", $0 }' | tee -a $GITHUB_OUTPUT
              else
                  echo 'Pick all runners assigned for the chosen client (language) - on cron (schedule) or if manually triggered job requires a full matrix'
                  jq -c "[.[] | select(.languages? and any(.languages[] == \"$LANGUAGE_NAME\"; .) and $CONDITION)]" < .github/json_matrices/build-matrix.json | awk '{ printf "host-matrix=%s\n", $0 }' | tee -a $GITHUB_OUTPUT
              fi

        - name: Create language version matrix
          id: create-lang-version-matrix
          shell: bash
          run: |
              set -o pipefail
              echo 'Select language (framework/SDK) versions to run tests on'
              if [[ "$EVENT_NAME" == "pull_request" || "$EVENT_NAME" == "push" || "$RUN_FULL_MATRIX" == "false" ]]; then
                  echo 'Pick language versions listed in 'always-run-versions' only - on PR, push or manually triggered job which does not require full matrix'
                  jq -c "[.[] | select(.language == \"$LANGUAGE_NAME\") | .[\"always-run-versions\"]][0] // []" < .github/json_matrices/supported-languages-versions.json | awk '{ printf "version-matrix=%s\n", $0 }' | tee -a $GITHUB_OUTPUT
              else
                  echo 'Pick language versions listed in 'versions' - on cron (schedule) or if manually triggered job requires a full matrix'
                  jq -c "[.[] | select(.language == \"$LANGUAGE_NAME\") | .versions][0]" < .github/json_matrices/supported-languages-versions.json | awk '{ printf "version-matrix=%s\n", $0 }' | tee -a $GITHUB_OUTPUT
              fi

        - name: Validate no empty/incorrect matrices
          shell: bash
          run: |
              ENGINES=`jq length <<< '${{ steps.load-engine-matrix.outputs.engine-matrix }}'`
              if [[ $ENGINES == 0 ]]; then
                  echo "Engine matrix is empty!"
                  exit 1
              fi
              HOSTS=`jq length <<< '${{ steps.load-host-matrix.outputs.host-matrix }}'`
              if [[ $HOSTS == 0 ]]; then
                  echo "Host matrix is empty!"
                  exit 1
              fi
              LANGS=`jq length <<< '${{ steps.create-lang-version-matrix.outputs.version-matrix }}'`
              if [[ $LANGS == 0 && $LANGUAGE_NAME != "rust" ]]; then
                  echo "Language matrix is empty!"
                  exit 1
              fi
