name: C# tests

on:
    push:
        branches: ["main"]
        paths:
            - csharp/**
            - glide-core/src/**
            - submodules/**
            - .github/workflows/csharp.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/install-redis/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
    pull_request:
        paths:
            - csharp/**
            - glide-core/src/**
            - submodules/**
            - .github/workflows/csharp.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/install-redis/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml

permissions:
    contents: read

concurrency:
    group: C#-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    run-tests:
        timeout-minutes: 25
        strategy:
            fail-fast: false
            matrix:
                redis:
                    - 6.2.14
                    - 7.2.3
                dotnet:
                    - '6.0'
                    - '8.0'
                os:
                    - ubuntu-latest
                    - macos-latest
        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Install redis
              # TODO: make this step macos compatible: https://github.com/aws/glide-for-redis/issues/781
              if: ${{ matrix.os == 'ubuntu-latest' }}
              uses: ./.github/workflows/install-redis
              with:
                  redis-version: ${{ matrix.redis }}

            - name: Install shared software dependencies
              uses: ./.github/workflows/install-shared-dependencies
              with:
                  os: ${{ matrix.os }}
                  target: ${{ matrix.os == 'ubuntu-latest' && 'x86_64-unknown-linux-gnu' || 'x86_64-apple-darwin' }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up dotnet ${{ matrix.dotnet }}
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: ${{ matrix.dotnet }}

            - name: Format
              working-directory: ./csharp
              run: dotnet format --verify-no-changes --verbosity diagnostic

            - name: Test dotnet ${{ matrix.dotnet }}
              working-directory: ./csharp
              run: dotnet test --framework net${{ matrix.dotnet }} "-l:html;LogFileName=TestReport.html" --results-directory . -warnaserror

            - uses: ./.github/workflows/test-benchmark
              with:
                  language-flag: -csharp

            - name: Upload test reports
              if: always()
              continue-on-error: true
              uses: actions/upload-artifact@v4
              with:
                  name: test-reports-dotnet-${{ matrix.dotnet }}-redis-${{ matrix.redis }}-${{ matrix.os }}
                  path: |
                      csharp/TestReport.html
                      benchmarks/results/*
                      utils/clusters/**

    lint-rust:
        timeout-minutes: 10
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - uses: ./.github/workflows/lint-rust
              with:
                  cargo-toml-folder: ./csharp/lib
