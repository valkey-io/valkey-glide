name: Install Engine

inputs:
    engine-version:
        description: "Engine version to install"
        required: true
        type: string
    target:
        description: "Specified target toolchain, ex. x86_64-unknown-linux-gnu"
        type: string
        required: true
        options:
            - x86_64-unknown-linux-gnu
            - aarch64-unknown-linux-gnu
            - x86_64-apple-darwin
            - aarch64-apple-darwin
            - aarch64-unknown-linux-musl
            - x86_64-unknown-linux-musl

env:
    CARGO_TERM_COLOR: always

runs:
    using: "composite"

    # TODO: self-hosted runners are actually cloning the repo, using the cache from the previous run
    # will not work as expected. We need to find a way to cache the valkey repo on the runner itself.
    steps:
        - name: Cache Valkey for non self hosted runners
          if: ${{!contains(inputs.target, 'aarch64-unknown') }}
          uses: actions/cache@v4
          id: cache-valkey
          with:
              path: |
                  ~/valkey
              key: valkey-${{ inputs.engine-version }}-${{ inputs.target }}

        - name: Prepare Valkey sources
          if: ${{ steps.cache-valkey.outputs.cache-hit != 'true' }}
          shell: bash
          run: |
              echo "Cloning and checking out Valkey ${{ inputs.engine-version }}"
              cd ~/
              if [[ -d valkey ]]; then
                echo "Removing existing valkey directory..."
                rm -fR valkey
              fi
              git clone https://github.com/valkey-io/valkey.git
              cd valkey
              git checkout ${{ inputs.engine-version }}

        - name: Build and install engine
          shell: bash
          run: |
              cd ~/valkey
              make BUILD_TLS=yes
              if command -v sudo &> /dev/null
              then
                  echo "sudo command exists"
                  sudo make install
              else
                  echo "sudo command does not exist"
                  make install
              fi
              echo 'export PATH=/usr/local/bin:$PATH' >>~/.bash_profile

        # TODO: This seems redundant to me. Is it necessary? Do we check that the Python we install is the correct version?
        # Why here and not elsewhere? All Git git repos were created equal
        - name: Verify Valkey installation and symlinks
          if: ${{ !contains(inputs.engine-version, '-rc') }}
          shell: bash
          run: |
              # In Valkey releases, the engine is built with symlinks from valkey-server and valkey-cli
              # to redis-server and redis-cli. This step ensures that the engine is properly installed
              # with the expected version and that Valkey symlinks are correctly created.
              EXPECTED_VERSION=`echo ${{ inputs.engine-version }} | sed -e "s/^redis-//"`
              INSTALLED_VER=$(redis-server -v)
              if [[ $INSTALLED_VER != *"${EXPECTED_VERSION}"* ]]; then
                  echo "Wrong version has been installed. Expected: $EXPECTED_VERSION, Installed: $INSTALLED_VER"
                  exit 1
              else
                  echo "Successfully installed the server: $INSTALLED_VER"
              fi
