name: Node

on:
    push:
        branches: ["main"]
        paths:
            - glide-core/src/**
            - submodules/**
            - node/**
            - utils/cluster_manager.py
            - .github/workflows/node.yml
            - .github/workflows/build-node-wrapper/action.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml
    pull_request:
        paths:
            - glide-core/src/**
            - submodules/**
            - node/**
            - utils/cluster_manager.py
            - .github/workflows/node.yml
            - .github/workflows/build-node-wrapper/action.yml
            - .github/workflows/install-shared-dependencies/action.yml
            - .github/workflows/test-benchmark/action.yml
            - .github/workflows/lint-rust/action.yml
            - .github/workflows/install-valkey/action.yml

concurrency:
    group: node-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

env:
    CARGO_TERM_COLOR: always

jobs:
    load-engine-matrix:
      runs-on: ubuntu-latest
      outputs:
        matrix: ${{ steps.load-engine-matrix.outputs.matrix }}
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Load the engine matrix
            id: load-engine-matrix
            shell: bash
            run: echo "matrix=$(jq -c . < .github/json_matrices/engine-matrix.json)" >> $GITHUB_OUTPUT

    test-ubuntu-latest:
        runs-on: ubuntu-latest
        needs: load-engine-matrix
        timeout-minutes: 15
        strategy:
            fail-fast: false
            matrix:
                engine: ${{ fromJson(needs.load-engine-matrix.outputs.matrix) }}
                  
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Use Node.js 16.x
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x

            - name: Build Node wrapper
              uses: ./.github/workflows/build-node-wrapper
              with:
                  os: "ubuntu"
                  target: "x86_64-unknown-linux-gnu"
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  engine-version: ${{ matrix.engine.version }}

            - name: test
              run: npm test
              working-directory: ./node

            - name: test hybrid node modules - commonjs
              run: |
                npm install --package-lock-only
                npm ci 
                npm run build-and-test
              working-directory: ./node/hybrid-node-tests/commonjs-test
            
            - name: test hybrid node modules - ecma
              run: |
                npm install --package-lock-only
                npm ci
                npm run build-and-test
              working-directory: ./node/hybrid-node-tests/ecmascript-test

            - uses: ./.github/workflows/test-benchmark
              with:
                  language-flag: -node

    lint-rust:
        timeout-minutes: 15
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - uses: ./.github/workflows/lint-rust
              with:
                  cargo-toml-folder: ./node/rust-client
              name: lint node rust

    build-macos-latest:
        runs-on: macos-latest
        timeout-minutes: 25
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive
            - name: Set up Homebrew
              uses: Homebrew/actions/setup-homebrew@master

            - name: Install NodeJS
              run: |
                  brew update
                  brew upgrade || true
                  brew install node

            - name: Downgrade npm major version to 8
              run: |
                  npm i -g npm@8

            - name: Build Node wrapper
              uses: ./.github/workflows/build-node-wrapper
              with:
                  os: "macos"
                  named_os: "darwin"
                  arch: "arm64"
                  target: "aarch64-apple-darwin"
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  engine-version: "7.2.5"

            - name: Test compatibility
              run: npm test -- -t "set and get flow works"
              working-directory: ./node

    build-amazonlinux-latest:
        runs-on: ubuntu-latest
        container: amazonlinux:latest
        timeout-minutes: 15
        steps:
            - name: Install git
              run: |
                  yum -y remove git
                  yum -y remove git-*
                  yum -y install https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
                  yum install -y git 
                  git --version

            - uses: actions/checkout@v4

            - name: Checkout submodules
              run: |
                  git config --global --add safe.directory "$GITHUB_WORKSPACE"
                  git submodule update --init --recursive

            - name: Install NodeJS
              run: |
                  yum install -y nodejs

            - name: Build Node wrapper
              uses: ./.github/workflows/build-node-wrapper
              with:
                  os: "amazon-linux"
                  target: "x86_64-unknown-linux-gnu"
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  engine-version: "7.2.5"

            - name: Test compatibility
              run: npm test -- -t "set and get flow works"
              working-directory: ./node                   
        
    build-and-test-linux-musl-on-x86:
        name: Build and test Node wrapper on Linux musl
        runs-on: ubuntu-latest
        container:
            image: node:alpine
            options: --user root --privileged

        steps:
          - name: Install git
            run: |
                apk update
                apk add git

          - uses: actions/checkout@v4
            with:
                submodules: recursive

          - name: Setup musl on Linux
            uses: ./.github/workflows/setup-musl-on-linux
            with:
                workspace: $GITHUB_WORKSPACE
                npm-scope: ${{ secrets.NPM_SCOPE }}
                npm-auth-token: ${{ secrets.NPM_AUTH_TOKEN }}

          - name: Build Node wrapper
            uses: ./.github/workflows/build-node-wrapper
            with:
                os: ubuntu
                named_os: linux
                arch: x64
                target: x86_64-unknown-linux-musl
                github-token: ${{ secrets.GITHUB_TOKEN }}
                engine-version: "7.2.5"
          
          - name: Test compatibility
            shell: bash
            run: npm test -- -t "set and get flow works"
            working-directory: ./node
