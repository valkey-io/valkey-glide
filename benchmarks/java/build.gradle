plugins {
    id 'java'
    id 'application'
}

group = 'com.example'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    //implementation 'redis.clients:jedis:6.0.0'
    implementation 'io.valkey:valkey-glide:2.0.1:linux-x86_64'
    implementation 'io.valkey:valkey-glide-jedis-compatibility:2.1.0:linux-x86_64'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.8'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.3.1'
}

application {
    mainClass = 'com.example.valkey.PerformanceTestRunner'
}

test {
    useJUnitPlatform()
}

tasks.register('runJedisTest', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=jedis']
}

tasks.register('runJedisPooledTest', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=jedispooled']
}

tasks.register('runValkeyTest', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=valkey']
}

tasks.register('runUnifiedJedisTest', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=unified']
}

tasks.register('runBothTests', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=both']
}

tasks.register('runCompatibilityTest', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=compatibility']
    if (project.hasProperty('args')) {
        args.addAll(project.property('args').toString().split(' '))
    }
}

tasks.register('runAllTests', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.PerformanceTestRunner'
    args = ['--client=all']
}

tasks.register('testConnectivity', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.ConnectivityTest'
}

tasks.register('GlideExample', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.example.valkey.GlideExample'
}
