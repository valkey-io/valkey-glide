// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: connection_request.proto
// Protobuf C++ Version: 5.28.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_connection_5frequest_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_connection_5frequest_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_connection_5frequest_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_connection_5frequest_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_connection_5frequest_2eproto;
namespace connection_request {
class AuthenticationInfo;
struct AuthenticationInfoDefaultTypeInternal;
extern AuthenticationInfoDefaultTypeInternal _AuthenticationInfo_default_instance_;
class ConnectionRequest;
struct ConnectionRequestDefaultTypeInternal;
extern ConnectionRequestDefaultTypeInternal _ConnectionRequest_default_instance_;
class ConnectionRetryStrategy;
struct ConnectionRetryStrategyDefaultTypeInternal;
extern ConnectionRetryStrategyDefaultTypeInternal _ConnectionRetryStrategy_default_instance_;
class NodeAddress;
struct NodeAddressDefaultTypeInternal;
extern NodeAddressDefaultTypeInternal _NodeAddress_default_instance_;
class PeriodicChecksDisabled;
struct PeriodicChecksDisabledDefaultTypeInternal;
extern PeriodicChecksDisabledDefaultTypeInternal _PeriodicChecksDisabled_default_instance_;
class PeriodicChecksManualInterval;
struct PeriodicChecksManualIntervalDefaultTypeInternal;
extern PeriodicChecksManualIntervalDefaultTypeInternal _PeriodicChecksManualInterval_default_instance_;
class PubSubChannelsOrPatterns;
struct PubSubChannelsOrPatternsDefaultTypeInternal;
extern PubSubChannelsOrPatternsDefaultTypeInternal _PubSubChannelsOrPatterns_default_instance_;
class PubSubSubscriptions;
struct PubSubSubscriptionsDefaultTypeInternal;
extern PubSubSubscriptionsDefaultTypeInternal _PubSubSubscriptions_default_instance_;
class PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse;
struct PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUseDefaultTypeInternal;
extern PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUseDefaultTypeInternal _PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse_default_instance_;
}  // namespace connection_request
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace connection_request {
enum ReadFrom : int {
  Primary = 0,
  PreferReplica = 1,
  LowestLatency = 2,
  AZAffinity = 3,
  ReadFrom_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ReadFrom_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ReadFrom_IsValid(int value);
extern const uint32_t ReadFrom_internal_data_[];
constexpr ReadFrom ReadFrom_MIN = static_cast<ReadFrom>(0);
constexpr ReadFrom ReadFrom_MAX = static_cast<ReadFrom>(3);
constexpr int ReadFrom_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ReadFrom_descriptor();
template <typename T>
const std::string& ReadFrom_Name(T value) {
  static_assert(std::is_same<T, ReadFrom>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ReadFrom_Name().");
  return ReadFrom_Name(static_cast<ReadFrom>(value));
}
template <>
inline const std::string& ReadFrom_Name(ReadFrom value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ReadFrom_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ReadFrom_Parse(absl::string_view name, ReadFrom* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReadFrom>(
      ReadFrom_descriptor(), name, value);
}
enum TlsMode : int {
  NoTls = 0,
  SecureTls = 1,
  InsecureTls = 2,
  TlsMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TlsMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TlsMode_IsValid(int value);
extern const uint32_t TlsMode_internal_data_[];
constexpr TlsMode TlsMode_MIN = static_cast<TlsMode>(0);
constexpr TlsMode TlsMode_MAX = static_cast<TlsMode>(2);
constexpr int TlsMode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TlsMode_descriptor();
template <typename T>
const std::string& TlsMode_Name(T value) {
  static_assert(std::is_same<T, TlsMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TlsMode_Name().");
  return TlsMode_Name(static_cast<TlsMode>(value));
}
template <>
inline const std::string& TlsMode_Name(TlsMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TlsMode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TlsMode_Parse(absl::string_view name, TlsMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TlsMode>(
      TlsMode_descriptor(), name, value);
}
enum ProtocolVersion : int {
  RESP3 = 0,
  RESP2 = 1,
  ProtocolVersion_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ProtocolVersion_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ProtocolVersion_IsValid(int value);
extern const uint32_t ProtocolVersion_internal_data_[];
constexpr ProtocolVersion ProtocolVersion_MIN = static_cast<ProtocolVersion>(0);
constexpr ProtocolVersion ProtocolVersion_MAX = static_cast<ProtocolVersion>(1);
constexpr int ProtocolVersion_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
ProtocolVersion_descriptor();
template <typename T>
const std::string& ProtocolVersion_Name(T value) {
  static_assert(std::is_same<T, ProtocolVersion>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ProtocolVersion_Name().");
  return ProtocolVersion_Name(static_cast<ProtocolVersion>(value));
}
template <>
inline const std::string& ProtocolVersion_Name(ProtocolVersion value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ProtocolVersion_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ProtocolVersion_Parse(absl::string_view name, ProtocolVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtocolVersion>(
      ProtocolVersion_descriptor(), name, value);
}
enum PubSubChannelType : int {
  Exact = 0,
  Pattern = 1,
  Sharded = 2,
  PubSubChannelType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PubSubChannelType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PubSubChannelType_IsValid(int value);
extern const uint32_t PubSubChannelType_internal_data_[];
constexpr PubSubChannelType PubSubChannelType_MIN = static_cast<PubSubChannelType>(0);
constexpr PubSubChannelType PubSubChannelType_MAX = static_cast<PubSubChannelType>(2);
constexpr int PubSubChannelType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PubSubChannelType_descriptor();
template <typename T>
const std::string& PubSubChannelType_Name(T value) {
  static_assert(std::is_same<T, PubSubChannelType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PubSubChannelType_Name().");
  return PubSubChannelType_Name(static_cast<PubSubChannelType>(value));
}
template <>
inline const std::string& PubSubChannelType_Name(PubSubChannelType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PubSubChannelType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PubSubChannelType_Parse(absl::string_view name, PubSubChannelType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PubSubChannelType>(
      PubSubChannelType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PubSubChannelsOrPatterns final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.PubSubChannelsOrPatterns) */ {
 public:
  inline PubSubChannelsOrPatterns() : PubSubChannelsOrPatterns(nullptr) {}
  ~PubSubChannelsOrPatterns() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PubSubChannelsOrPatterns(
      ::google::protobuf::internal::ConstantInitialized);

  inline PubSubChannelsOrPatterns(const PubSubChannelsOrPatterns& from) : PubSubChannelsOrPatterns(nullptr, from) {}
  inline PubSubChannelsOrPatterns(PubSubChannelsOrPatterns&& from) noexcept
      : PubSubChannelsOrPatterns(nullptr, std::move(from)) {}
  inline PubSubChannelsOrPatterns& operator=(const PubSubChannelsOrPatterns& from) {
    CopyFrom(from);
    return *this;
  }
  inline PubSubChannelsOrPatterns& operator=(PubSubChannelsOrPatterns&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PubSubChannelsOrPatterns& default_instance() {
    return *internal_default_instance();
  }
  static inline const PubSubChannelsOrPatterns* internal_default_instance() {
    return reinterpret_cast<const PubSubChannelsOrPatterns*>(
        &_PubSubChannelsOrPatterns_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PubSubChannelsOrPatterns& a, PubSubChannelsOrPatterns& b) { a.Swap(&b); }
  inline void Swap(PubSubChannelsOrPatterns* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PubSubChannelsOrPatterns* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PubSubChannelsOrPatterns* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PubSubChannelsOrPatterns>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PubSubChannelsOrPatterns& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PubSubChannelsOrPatterns& from) { PubSubChannelsOrPatterns::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PubSubChannelsOrPatterns* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.PubSubChannelsOrPatterns"; }

 protected:
  explicit PubSubChannelsOrPatterns(::google::protobuf::Arena* arena);
  PubSubChannelsOrPatterns(::google::protobuf::Arena* arena, const PubSubChannelsOrPatterns& from);
  PubSubChannelsOrPatterns(::google::protobuf::Arena* arena, PubSubChannelsOrPatterns&& from) noexcept
      : PubSubChannelsOrPatterns(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsOrPatternsFieldNumber = 1,
  };
  // repeated bytes channels_or_patterns = 1;
  int channels_or_patterns_size() const;
  private:
  int _internal_channels_or_patterns_size() const;

  public:
  void clear_channels_or_patterns() ;
  const std::string& channels_or_patterns(int index) const;
  std::string* mutable_channels_or_patterns(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channels_or_patterns(int index, Arg_&& value, Args_... args);
  std::string* add_channels_or_patterns();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_channels_or_patterns(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& channels_or_patterns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_channels_or_patterns();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_channels_or_patterns() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_channels_or_patterns();

  public:
  // @@protoc_insertion_point(class_scope:connection_request.PubSubChannelsOrPatterns)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PubSubChannelsOrPatterns_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PubSubChannelsOrPatterns& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> channels_or_patterns_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class PeriodicChecksManualInterval final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.PeriodicChecksManualInterval) */ {
 public:
  inline PeriodicChecksManualInterval() : PeriodicChecksManualInterval(nullptr) {}
  ~PeriodicChecksManualInterval() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeriodicChecksManualInterval(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeriodicChecksManualInterval(const PeriodicChecksManualInterval& from) : PeriodicChecksManualInterval(nullptr, from) {}
  inline PeriodicChecksManualInterval(PeriodicChecksManualInterval&& from) noexcept
      : PeriodicChecksManualInterval(nullptr, std::move(from)) {}
  inline PeriodicChecksManualInterval& operator=(const PeriodicChecksManualInterval& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeriodicChecksManualInterval& operator=(PeriodicChecksManualInterval&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeriodicChecksManualInterval& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeriodicChecksManualInterval* internal_default_instance() {
    return reinterpret_cast<const PeriodicChecksManualInterval*>(
        &_PeriodicChecksManualInterval_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PeriodicChecksManualInterval& a, PeriodicChecksManualInterval& b) { a.Swap(&b); }
  inline void Swap(PeriodicChecksManualInterval* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeriodicChecksManualInterval* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeriodicChecksManualInterval* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PeriodicChecksManualInterval>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeriodicChecksManualInterval& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeriodicChecksManualInterval& from) { PeriodicChecksManualInterval::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeriodicChecksManualInterval* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.PeriodicChecksManualInterval"; }

 protected:
  explicit PeriodicChecksManualInterval(::google::protobuf::Arena* arena);
  PeriodicChecksManualInterval(::google::protobuf::Arena* arena, const PeriodicChecksManualInterval& from);
  PeriodicChecksManualInterval(::google::protobuf::Arena* arena, PeriodicChecksManualInterval&& from) noexcept
      : PeriodicChecksManualInterval(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDurationInSecFieldNumber = 1,
  };
  // uint32 duration_in_sec = 1;
  void clear_duration_in_sec() ;
  ::uint32_t duration_in_sec() const;
  void set_duration_in_sec(::uint32_t value);

  private:
  ::uint32_t _internal_duration_in_sec() const;
  void _internal_set_duration_in_sec(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:connection_request.PeriodicChecksManualInterval)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeriodicChecksManualInterval_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeriodicChecksManualInterval& from_msg);
    ::uint32_t duration_in_sec_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class PeriodicChecksDisabled final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:connection_request.PeriodicChecksDisabled) */ {
 public:
  inline PeriodicChecksDisabled() : PeriodicChecksDisabled(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeriodicChecksDisabled(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeriodicChecksDisabled(const PeriodicChecksDisabled& from) : PeriodicChecksDisabled(nullptr, from) {}
  inline PeriodicChecksDisabled(PeriodicChecksDisabled&& from) noexcept
      : PeriodicChecksDisabled(nullptr, std::move(from)) {}
  inline PeriodicChecksDisabled& operator=(const PeriodicChecksDisabled& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeriodicChecksDisabled& operator=(PeriodicChecksDisabled&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeriodicChecksDisabled& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeriodicChecksDisabled* internal_default_instance() {
    return reinterpret_cast<const PeriodicChecksDisabled*>(
        &_PeriodicChecksDisabled_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PeriodicChecksDisabled& a, PeriodicChecksDisabled& b) { a.Swap(&b); }
  inline void Swap(PeriodicChecksDisabled* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeriodicChecksDisabled* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeriodicChecksDisabled* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PeriodicChecksDisabled>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PeriodicChecksDisabled& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PeriodicChecksDisabled& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.PeriodicChecksDisabled"; }

 protected:
  explicit PeriodicChecksDisabled(::google::protobuf::Arena* arena);
  PeriodicChecksDisabled(::google::protobuf::Arena* arena, const PeriodicChecksDisabled& from);
  PeriodicChecksDisabled(::google::protobuf::Arena* arena, PeriodicChecksDisabled&& from) noexcept
      : PeriodicChecksDisabled(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:connection_request.PeriodicChecksDisabled)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeriodicChecksDisabled_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeriodicChecksDisabled& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class NodeAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.NodeAddress) */ {
 public:
  inline NodeAddress() : NodeAddress(nullptr) {}
  ~NodeAddress() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeAddress(const NodeAddress& from) : NodeAddress(nullptr, from) {}
  inline NodeAddress(NodeAddress&& from) noexcept
      : NodeAddress(nullptr, std::move(from)) {}
  inline NodeAddress& operator=(const NodeAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeAddress& operator=(NodeAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeAddress* internal_default_instance() {
    return reinterpret_cast<const NodeAddress*>(
        &_NodeAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NodeAddress& a, NodeAddress& b) { a.Swap(&b); }
  inline void Swap(NodeAddress* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeAddress* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeAddress& from) { NodeAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeAddress* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.NodeAddress"; }

 protected:
  explicit NodeAddress(::google::protobuf::Arena* arena);
  NodeAddress(::google::protobuf::Arena* arena, const NodeAddress& from);
  NodeAddress(::google::protobuf::Arena* arena, NodeAddress&& from) noexcept
      : NodeAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostFieldNumber = 1,
    kPortFieldNumber = 2,
  };
  // string host = 1;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // uint32 port = 2;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:connection_request.NodeAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeAddress_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeAddress& from_msg);
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::uint32_t port_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ConnectionRetryStrategy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.ConnectionRetryStrategy) */ {
 public:
  inline ConnectionRetryStrategy() : ConnectionRetryStrategy(nullptr) {}
  ~ConnectionRetryStrategy() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionRetryStrategy(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionRetryStrategy(const ConnectionRetryStrategy& from) : ConnectionRetryStrategy(nullptr, from) {}
  inline ConnectionRetryStrategy(ConnectionRetryStrategy&& from) noexcept
      : ConnectionRetryStrategy(nullptr, std::move(from)) {}
  inline ConnectionRetryStrategy& operator=(const ConnectionRetryStrategy& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionRetryStrategy& operator=(ConnectionRetryStrategy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionRetryStrategy& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectionRetryStrategy* internal_default_instance() {
    return reinterpret_cast<const ConnectionRetryStrategy*>(
        &_ConnectionRetryStrategy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ConnectionRetryStrategy& a, ConnectionRetryStrategy& b) { a.Swap(&b); }
  inline void Swap(ConnectionRetryStrategy* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionRetryStrategy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionRetryStrategy* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConnectionRetryStrategy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectionRetryStrategy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectionRetryStrategy& from) { ConnectionRetryStrategy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConnectionRetryStrategy* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.ConnectionRetryStrategy"; }

 protected:
  explicit ConnectionRetryStrategy(::google::protobuf::Arena* arena);
  ConnectionRetryStrategy(::google::protobuf::Arena* arena, const ConnectionRetryStrategy& from);
  ConnectionRetryStrategy(::google::protobuf::Arena* arena, ConnectionRetryStrategy&& from) noexcept
      : ConnectionRetryStrategy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNumberOfRetriesFieldNumber = 1,
    kFactorFieldNumber = 2,
    kExponentBaseFieldNumber = 3,
  };
  // uint32 number_of_retries = 1;
  void clear_number_of_retries() ;
  ::uint32_t number_of_retries() const;
  void set_number_of_retries(::uint32_t value);

  private:
  ::uint32_t _internal_number_of_retries() const;
  void _internal_set_number_of_retries(::uint32_t value);

  public:
  // uint32 factor = 2;
  void clear_factor() ;
  ::uint32_t factor() const;
  void set_factor(::uint32_t value);

  private:
  ::uint32_t _internal_factor() const;
  void _internal_set_factor(::uint32_t value);

  public:
  // uint32 exponent_base = 3;
  void clear_exponent_base() ;
  ::uint32_t exponent_base() const;
  void set_exponent_base(::uint32_t value);

  private:
  ::uint32_t _internal_exponent_base() const;
  void _internal_set_exponent_base(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:connection_request.ConnectionRetryStrategy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectionRetryStrategy_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionRetryStrategy& from_msg);
    ::uint32_t number_of_retries_;
    ::uint32_t factor_;
    ::uint32_t exponent_base_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class AuthenticationInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.AuthenticationInfo) */ {
 public:
  inline AuthenticationInfo() : AuthenticationInfo(nullptr) {}
  ~AuthenticationInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthenticationInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthenticationInfo(const AuthenticationInfo& from) : AuthenticationInfo(nullptr, from) {}
  inline AuthenticationInfo(AuthenticationInfo&& from) noexcept
      : AuthenticationInfo(nullptr, std::move(from)) {}
  inline AuthenticationInfo& operator=(const AuthenticationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthenticationInfo& operator=(AuthenticationInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthenticationInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthenticationInfo* internal_default_instance() {
    return reinterpret_cast<const AuthenticationInfo*>(
        &_AuthenticationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AuthenticationInfo& a, AuthenticationInfo& b) { a.Swap(&b); }
  inline void Swap(AuthenticationInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthenticationInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthenticationInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AuthenticationInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthenticationInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthenticationInfo& from) { AuthenticationInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AuthenticationInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.AuthenticationInfo"; }

 protected:
  explicit AuthenticationInfo(::google::protobuf::Arena* arena);
  AuthenticationInfo(::google::protobuf::Arena* arena, const AuthenticationInfo& from);
  AuthenticationInfo(::google::protobuf::Arena* arena, AuthenticationInfo&& from) noexcept
      : AuthenticationInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPasswordFieldNumber = 1,
    kUsernameFieldNumber = 2,
  };
  // string password = 1;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // string username = 2;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // @@protoc_insertion_point(class_scope:connection_request.AuthenticationInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AuthenticationInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthenticationInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse, ::uint32_t, ::connection_request::PubSubChannelsOrPatterns,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse, ::uint32_t, ::connection_request::PubSubChannelsOrPatterns,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse*>(
        &_PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class PubSubSubscriptions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.PubSubSubscriptions) */ {
 public:
  inline PubSubSubscriptions() : PubSubSubscriptions(nullptr) {}
  ~PubSubSubscriptions() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PubSubSubscriptions(
      ::google::protobuf::internal::ConstantInitialized);

  inline PubSubSubscriptions(const PubSubSubscriptions& from) : PubSubSubscriptions(nullptr, from) {}
  inline PubSubSubscriptions(PubSubSubscriptions&& from) noexcept
      : PubSubSubscriptions(nullptr, std::move(from)) {}
  inline PubSubSubscriptions& operator=(const PubSubSubscriptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline PubSubSubscriptions& operator=(PubSubSubscriptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PubSubSubscriptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const PubSubSubscriptions* internal_default_instance() {
    return reinterpret_cast<const PubSubSubscriptions*>(
        &_PubSubSubscriptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PubSubSubscriptions& a, PubSubSubscriptions& b) { a.Swap(&b); }
  inline void Swap(PubSubSubscriptions* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PubSubSubscriptions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PubSubSubscriptions* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PubSubSubscriptions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PubSubSubscriptions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PubSubSubscriptions& from) { PubSubSubscriptions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PubSubSubscriptions* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.PubSubSubscriptions"; }

 protected:
  explicit PubSubSubscriptions(::google::protobuf::Arena* arena);
  PubSubSubscriptions(::google::protobuf::Arena* arena, const PubSubSubscriptions& from);
  PubSubSubscriptions(::google::protobuf::Arena* arena, PubSubSubscriptions&& from) noexcept
      : PubSubSubscriptions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsOrPatternsByTypeFieldNumber = 1,
  };
  // map<uint32, .connection_request.PubSubChannelsOrPatterns> channels_or_patterns_by_type = 1;
  int channels_or_patterns_by_type_size() const;
  private:
  int _internal_channels_or_patterns_by_type_size() const;

  public:
  void clear_channels_or_patterns_by_type() ;
  const ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>& channels_or_patterns_by_type() const;
  ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>* mutable_channels_or_patterns_by_type();

  private:
  const ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>& _internal_channels_or_patterns_by_type() const;
  ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>* _internal_mutable_channels_or_patterns_by_type();

  public:
  // @@protoc_insertion_point(class_scope:connection_request.PubSubSubscriptions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PubSubSubscriptions_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PubSubSubscriptions& from_msg);
    ::google::protobuf::internal::MapField<PubSubSubscriptions_ChannelsOrPatternsByTypeEntry_DoNotUse, ::uint32_t, ::connection_request::PubSubChannelsOrPatterns,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        channels_or_patterns_by_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};
// -------------------------------------------------------------------

class ConnectionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:connection_request.ConnectionRequest) */ {
 public:
  inline ConnectionRequest() : ConnectionRequest(nullptr) {}
  ~ConnectionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionRequest(const ConnectionRequest& from) : ConnectionRequest(nullptr, from) {}
  inline ConnectionRequest(ConnectionRequest&& from) noexcept
      : ConnectionRequest(nullptr, std::move(from)) {}
  inline ConnectionRequest& operator=(const ConnectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionRequest& operator=(ConnectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionRequest& default_instance() {
    return *internal_default_instance();
  }
  enum PeriodicChecksCase {
    kPeriodicChecksManualInterval = 11,
    kPeriodicChecksDisabled = 12,
    PERIODIC_CHECKS_NOT_SET = 0,
  };
  static inline const ConnectionRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectionRequest*>(
        &_ConnectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ConnectionRequest& a, ConnectionRequest& b) { a.Swap(&b); }
  inline void Swap(ConnectionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConnectionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectionRequest& from) { ConnectionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConnectionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "connection_request.ConnectionRequest"; }

 protected:
  explicit ConnectionRequest(::google::protobuf::Arena* arena);
  ConnectionRequest(::google::protobuf::Arena* arena, const ConnectionRequest& from);
  ConnectionRequest(::google::protobuf::Arena* arena, ConnectionRequest&& from) noexcept
      : ConnectionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 1,
    kClientNameFieldNumber = 10,
    kClientAzFieldNumber = 15,
    kConnectionRetryStrategyFieldNumber = 6,
    kAuthenticationInfoFieldNumber = 7,
    kPubsubSubscriptionsFieldNumber = 13,
    kTlsModeFieldNumber = 2,
    kClusterModeEnabledFieldNumber = 3,
    kRequestTimeoutFieldNumber = 4,
    kReadFromFieldNumber = 5,
    kDatabaseIdFieldNumber = 8,
    kProtocolFieldNumber = 9,
    kInflightRequestsLimitFieldNumber = 14,
    kPeriodicChecksManualIntervalFieldNumber = 11,
    kPeriodicChecksDisabledFieldNumber = 12,
  };
  // repeated .connection_request.NodeAddress addresses = 1;
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  ::connection_request::NodeAddress* mutable_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>* _internal_mutable_addresses();
  public:
  const ::connection_request::NodeAddress& addresses(int index) const;
  ::connection_request::NodeAddress* add_addresses();
  const ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>& addresses() const;
  // string client_name = 10;
  void clear_client_name() ;
  const std::string& client_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_name(Arg_&& arg, Args_... args);
  std::string* mutable_client_name();
  PROTOBUF_NODISCARD std::string* release_client_name();
  void set_allocated_client_name(std::string* value);

  private:
  const std::string& _internal_client_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_name(
      const std::string& value);
  std::string* _internal_mutable_client_name();

  public:
  // string client_az = 15;
  void clear_client_az() ;
  const std::string& client_az() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_az(Arg_&& arg, Args_... args);
  std::string* mutable_client_az();
  PROTOBUF_NODISCARD std::string* release_client_az();
  void set_allocated_client_az(std::string* value);

  private:
  const std::string& _internal_client_az() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_az(
      const std::string& value);
  std::string* _internal_mutable_client_az();

  public:
  // .connection_request.ConnectionRetryStrategy connection_retry_strategy = 6;
  bool has_connection_retry_strategy() const;
  void clear_connection_retry_strategy() ;
  const ::connection_request::ConnectionRetryStrategy& connection_retry_strategy() const;
  PROTOBUF_NODISCARD ::connection_request::ConnectionRetryStrategy* release_connection_retry_strategy();
  ::connection_request::ConnectionRetryStrategy* mutable_connection_retry_strategy();
  void set_allocated_connection_retry_strategy(::connection_request::ConnectionRetryStrategy* value);
  void unsafe_arena_set_allocated_connection_retry_strategy(::connection_request::ConnectionRetryStrategy* value);
  ::connection_request::ConnectionRetryStrategy* unsafe_arena_release_connection_retry_strategy();

  private:
  const ::connection_request::ConnectionRetryStrategy& _internal_connection_retry_strategy() const;
  ::connection_request::ConnectionRetryStrategy* _internal_mutable_connection_retry_strategy();

  public:
  // .connection_request.AuthenticationInfo authentication_info = 7;
  bool has_authentication_info() const;
  void clear_authentication_info() ;
  const ::connection_request::AuthenticationInfo& authentication_info() const;
  PROTOBUF_NODISCARD ::connection_request::AuthenticationInfo* release_authentication_info();
  ::connection_request::AuthenticationInfo* mutable_authentication_info();
  void set_allocated_authentication_info(::connection_request::AuthenticationInfo* value);
  void unsafe_arena_set_allocated_authentication_info(::connection_request::AuthenticationInfo* value);
  ::connection_request::AuthenticationInfo* unsafe_arena_release_authentication_info();

  private:
  const ::connection_request::AuthenticationInfo& _internal_authentication_info() const;
  ::connection_request::AuthenticationInfo* _internal_mutable_authentication_info();

  public:
  // .connection_request.PubSubSubscriptions pubsub_subscriptions = 13;
  bool has_pubsub_subscriptions() const;
  void clear_pubsub_subscriptions() ;
  const ::connection_request::PubSubSubscriptions& pubsub_subscriptions() const;
  PROTOBUF_NODISCARD ::connection_request::PubSubSubscriptions* release_pubsub_subscriptions();
  ::connection_request::PubSubSubscriptions* mutable_pubsub_subscriptions();
  void set_allocated_pubsub_subscriptions(::connection_request::PubSubSubscriptions* value);
  void unsafe_arena_set_allocated_pubsub_subscriptions(::connection_request::PubSubSubscriptions* value);
  ::connection_request::PubSubSubscriptions* unsafe_arena_release_pubsub_subscriptions();

  private:
  const ::connection_request::PubSubSubscriptions& _internal_pubsub_subscriptions() const;
  ::connection_request::PubSubSubscriptions* _internal_mutable_pubsub_subscriptions();

  public:
  // .connection_request.TlsMode tls_mode = 2;
  void clear_tls_mode() ;
  ::connection_request::TlsMode tls_mode() const;
  void set_tls_mode(::connection_request::TlsMode value);

  private:
  ::connection_request::TlsMode _internal_tls_mode() const;
  void _internal_set_tls_mode(::connection_request::TlsMode value);

  public:
  // bool cluster_mode_enabled = 3;
  void clear_cluster_mode_enabled() ;
  bool cluster_mode_enabled() const;
  void set_cluster_mode_enabled(bool value);

  private:
  bool _internal_cluster_mode_enabled() const;
  void _internal_set_cluster_mode_enabled(bool value);

  public:
  // uint32 request_timeout = 4;
  void clear_request_timeout() ;
  ::uint32_t request_timeout() const;
  void set_request_timeout(::uint32_t value);

  private:
  ::uint32_t _internal_request_timeout() const;
  void _internal_set_request_timeout(::uint32_t value);

  public:
  // .connection_request.ReadFrom read_from = 5;
  void clear_read_from() ;
  ::connection_request::ReadFrom read_from() const;
  void set_read_from(::connection_request::ReadFrom value);

  private:
  ::connection_request::ReadFrom _internal_read_from() const;
  void _internal_set_read_from(::connection_request::ReadFrom value);

  public:
  // uint32 database_id = 8;
  void clear_database_id() ;
  ::uint32_t database_id() const;
  void set_database_id(::uint32_t value);

  private:
  ::uint32_t _internal_database_id() const;
  void _internal_set_database_id(::uint32_t value);

  public:
  // .connection_request.ProtocolVersion protocol = 9;
  void clear_protocol() ;
  ::connection_request::ProtocolVersion protocol() const;
  void set_protocol(::connection_request::ProtocolVersion value);

  private:
  ::connection_request::ProtocolVersion _internal_protocol() const;
  void _internal_set_protocol(::connection_request::ProtocolVersion value);

  public:
  // uint32 inflight_requests_limit = 14;
  void clear_inflight_requests_limit() ;
  ::uint32_t inflight_requests_limit() const;
  void set_inflight_requests_limit(::uint32_t value);

  private:
  ::uint32_t _internal_inflight_requests_limit() const;
  void _internal_set_inflight_requests_limit(::uint32_t value);

  public:
  // .connection_request.PeriodicChecksManualInterval periodic_checks_manual_interval = 11;
  bool has_periodic_checks_manual_interval() const;
  private:
  bool _internal_has_periodic_checks_manual_interval() const;

  public:
  void clear_periodic_checks_manual_interval() ;
  const ::connection_request::PeriodicChecksManualInterval& periodic_checks_manual_interval() const;
  PROTOBUF_NODISCARD ::connection_request::PeriodicChecksManualInterval* release_periodic_checks_manual_interval();
  ::connection_request::PeriodicChecksManualInterval* mutable_periodic_checks_manual_interval();
  void set_allocated_periodic_checks_manual_interval(::connection_request::PeriodicChecksManualInterval* value);
  void unsafe_arena_set_allocated_periodic_checks_manual_interval(::connection_request::PeriodicChecksManualInterval* value);
  ::connection_request::PeriodicChecksManualInterval* unsafe_arena_release_periodic_checks_manual_interval();

  private:
  const ::connection_request::PeriodicChecksManualInterval& _internal_periodic_checks_manual_interval() const;
  ::connection_request::PeriodicChecksManualInterval* _internal_mutable_periodic_checks_manual_interval();

  public:
  // .connection_request.PeriodicChecksDisabled periodic_checks_disabled = 12;
  bool has_periodic_checks_disabled() const;
  private:
  bool _internal_has_periodic_checks_disabled() const;

  public:
  void clear_periodic_checks_disabled() ;
  const ::connection_request::PeriodicChecksDisabled& periodic_checks_disabled() const;
  PROTOBUF_NODISCARD ::connection_request::PeriodicChecksDisabled* release_periodic_checks_disabled();
  ::connection_request::PeriodicChecksDisabled* mutable_periodic_checks_disabled();
  void set_allocated_periodic_checks_disabled(::connection_request::PeriodicChecksDisabled* value);
  void unsafe_arena_set_allocated_periodic_checks_disabled(::connection_request::PeriodicChecksDisabled* value);
  ::connection_request::PeriodicChecksDisabled* unsafe_arena_release_periodic_checks_disabled();

  private:
  const ::connection_request::PeriodicChecksDisabled& _internal_periodic_checks_disabled() const;
  ::connection_request::PeriodicChecksDisabled* _internal_mutable_periodic_checks_disabled();

  public:
  void clear_periodic_checks();
  PeriodicChecksCase periodic_checks_case() const;
  // @@protoc_insertion_point(class_scope:connection_request.ConnectionRequest)
 private:
  class _Internal;
  void set_has_periodic_checks_manual_interval();
  void set_has_periodic_checks_disabled();
  inline bool has_periodic_checks() const;
  inline void clear_has_periodic_checks();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 6,
      73, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::connection_request::NodeAddress > addresses_;
    ::google::protobuf::internal::ArenaStringPtr client_name_;
    ::google::protobuf::internal::ArenaStringPtr client_az_;
    ::connection_request::ConnectionRetryStrategy* connection_retry_strategy_;
    ::connection_request::AuthenticationInfo* authentication_info_;
    ::connection_request::PubSubSubscriptions* pubsub_subscriptions_;
    int tls_mode_;
    bool cluster_mode_enabled_;
    ::uint32_t request_timeout_;
    int read_from_;
    ::uint32_t database_id_;
    int protocol_;
    ::uint32_t inflight_requests_limit_;
    union PeriodicChecksUnion {
      constexpr PeriodicChecksUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::connection_request::PeriodicChecksManualInterval* periodic_checks_manual_interval_;
      ::connection_request::PeriodicChecksDisabled* periodic_checks_disabled_;
    } periodic_checks_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_connection_5frequest_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NodeAddress

// string host = 1;
inline void NodeAddress::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& NodeAddress::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.NodeAddress.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeAddress::set_host(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:connection_request.NodeAddress.host)
}
inline std::string* NodeAddress::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:connection_request.NodeAddress.host)
  return _s;
}
inline const std::string& NodeAddress::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void NodeAddress::_internal_set_host(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(value, GetArena());
}
inline std::string* NodeAddress::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* NodeAddress::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.NodeAddress.host)
  return _impl_.host_.Release();
}
inline void NodeAddress::set_allocated_host(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:connection_request.NodeAddress.host)
}

// uint32 port = 2;
inline void NodeAddress::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t NodeAddress::port() const {
  // @@protoc_insertion_point(field_get:connection_request.NodeAddress.port)
  return _internal_port();
}
inline void NodeAddress::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:connection_request.NodeAddress.port)
}
inline ::uint32_t NodeAddress::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void NodeAddress::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// -------------------------------------------------------------------

// AuthenticationInfo

// string password = 1;
inline void AuthenticationInfo::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& AuthenticationInfo::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.AuthenticationInfo.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticationInfo::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:connection_request.AuthenticationInfo.password)
}
inline std::string* AuthenticationInfo::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:connection_request.AuthenticationInfo.password)
  return _s;
}
inline const std::string& AuthenticationInfo::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void AuthenticationInfo::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* AuthenticationInfo::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* AuthenticationInfo::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.AuthenticationInfo.password)
  return _impl_.password_.Release();
}
inline void AuthenticationInfo::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:connection_request.AuthenticationInfo.password)
}

// string username = 2;
inline void AuthenticationInfo::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& AuthenticationInfo::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.AuthenticationInfo.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AuthenticationInfo::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:connection_request.AuthenticationInfo.username)
}
inline std::string* AuthenticationInfo::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:connection_request.AuthenticationInfo.username)
  return _s;
}
inline const std::string& AuthenticationInfo::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void AuthenticationInfo::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* AuthenticationInfo::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* AuthenticationInfo::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.AuthenticationInfo.username)
  return _impl_.username_.Release();
}
inline void AuthenticationInfo::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.username_.IsDefault()) {
          _impl_.username_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:connection_request.AuthenticationInfo.username)
}

// -------------------------------------------------------------------

// PeriodicChecksManualInterval

// uint32 duration_in_sec = 1;
inline void PeriodicChecksManualInterval::clear_duration_in_sec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_in_sec_ = 0u;
}
inline ::uint32_t PeriodicChecksManualInterval::duration_in_sec() const {
  // @@protoc_insertion_point(field_get:connection_request.PeriodicChecksManualInterval.duration_in_sec)
  return _internal_duration_in_sec();
}
inline void PeriodicChecksManualInterval::set_duration_in_sec(::uint32_t value) {
  _internal_set_duration_in_sec(value);
  // @@protoc_insertion_point(field_set:connection_request.PeriodicChecksManualInterval.duration_in_sec)
}
inline ::uint32_t PeriodicChecksManualInterval::_internal_duration_in_sec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_in_sec_;
}
inline void PeriodicChecksManualInterval::_internal_set_duration_in_sec(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_in_sec_ = value;
}

// -------------------------------------------------------------------

// PeriodicChecksDisabled

// -------------------------------------------------------------------

// PubSubChannelsOrPatterns

// repeated bytes channels_or_patterns = 1;
inline int PubSubChannelsOrPatterns::_internal_channels_or_patterns_size() const {
  return _internal_channels_or_patterns().size();
}
inline int PubSubChannelsOrPatterns::channels_or_patterns_size() const {
  return _internal_channels_or_patterns_size();
}
inline void PubSubChannelsOrPatterns::clear_channels_or_patterns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_or_patterns_.Clear();
}
inline std::string* PubSubChannelsOrPatterns::add_channels_or_patterns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_channels_or_patterns()->Add();
  // @@protoc_insertion_point(field_add_mutable:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
  return _s;
}
inline const std::string& PubSubChannelsOrPatterns::channels_or_patterns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
  return _internal_channels_or_patterns().Get(index);
}
inline std::string* PubSubChannelsOrPatterns::mutable_channels_or_patterns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
  return _internal_mutable_channels_or_patterns()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PubSubChannelsOrPatterns::set_channels_or_patterns(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_channels_or_patterns()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
}
template <typename Arg_, typename... Args_>
inline void PubSubChannelsOrPatterns::add_channels_or_patterns(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_channels_or_patterns(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PubSubChannelsOrPatterns::channels_or_patterns() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
  return _internal_channels_or_patterns();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PubSubChannelsOrPatterns::mutable_channels_or_patterns() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:connection_request.PubSubChannelsOrPatterns.channels_or_patterns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channels_or_patterns();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
PubSubChannelsOrPatterns::_internal_channels_or_patterns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_or_patterns_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
PubSubChannelsOrPatterns::_internal_mutable_channels_or_patterns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channels_or_patterns_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PubSubSubscriptions

// map<uint32, .connection_request.PubSubChannelsOrPatterns> channels_or_patterns_by_type = 1;
inline int PubSubSubscriptions::_internal_channels_or_patterns_by_type_size() const {
  return _internal_channels_or_patterns_by_type().size();
}
inline int PubSubSubscriptions::channels_or_patterns_by_type_size() const {
  return _internal_channels_or_patterns_by_type_size();
}
inline void PubSubSubscriptions::clear_channels_or_patterns_by_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_or_patterns_by_type_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>& PubSubSubscriptions::_internal_channels_or_patterns_by_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_or_patterns_by_type_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>& PubSubSubscriptions::channels_or_patterns_by_type() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:connection_request.PubSubSubscriptions.channels_or_patterns_by_type)
  return _internal_channels_or_patterns_by_type();
}
inline ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>* PubSubSubscriptions::_internal_mutable_channels_or_patterns_by_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channels_or_patterns_by_type_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::connection_request::PubSubChannelsOrPatterns>* PubSubSubscriptions::mutable_channels_or_patterns_by_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:connection_request.PubSubSubscriptions.channels_or_patterns_by_type)
  return _internal_mutable_channels_or_patterns_by_type();
}

// -------------------------------------------------------------------

// ConnectionRequest

// repeated .connection_request.NodeAddress addresses = 1;
inline int ConnectionRequest::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int ConnectionRequest::addresses_size() const {
  return _internal_addresses_size();
}
inline void ConnectionRequest::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline ::connection_request::NodeAddress* ConnectionRequest::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>* ConnectionRequest::mutable_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:connection_request.ConnectionRequest.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::connection_request::NodeAddress& ConnectionRequest::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.addresses)
  return _internal_addresses().Get(index);
}
inline ::connection_request::NodeAddress* ConnectionRequest::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::connection_request::NodeAddress* _add = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add:connection_request.ConnectionRequest.addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>& ConnectionRequest::addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:connection_request.ConnectionRequest.addresses)
  return _internal_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>&
ConnectionRequest::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::connection_request::NodeAddress>*
ConnectionRequest::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// .connection_request.TlsMode tls_mode = 2;
inline void ConnectionRequest::clear_tls_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tls_mode_ = 0;
}
inline ::connection_request::TlsMode ConnectionRequest::tls_mode() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.tls_mode)
  return _internal_tls_mode();
}
inline void ConnectionRequest::set_tls_mode(::connection_request::TlsMode value) {
  _internal_set_tls_mode(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.tls_mode)
}
inline ::connection_request::TlsMode ConnectionRequest::_internal_tls_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::connection_request::TlsMode>(_impl_.tls_mode_);
}
inline void ConnectionRequest::_internal_set_tls_mode(::connection_request::TlsMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tls_mode_ = value;
}

// bool cluster_mode_enabled = 3;
inline void ConnectionRequest::clear_cluster_mode_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_mode_enabled_ = false;
}
inline bool ConnectionRequest::cluster_mode_enabled() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.cluster_mode_enabled)
  return _internal_cluster_mode_enabled();
}
inline void ConnectionRequest::set_cluster_mode_enabled(bool value) {
  _internal_set_cluster_mode_enabled(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.cluster_mode_enabled)
}
inline bool ConnectionRequest::_internal_cluster_mode_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_mode_enabled_;
}
inline void ConnectionRequest::_internal_set_cluster_mode_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_mode_enabled_ = value;
}

// uint32 request_timeout = 4;
inline void ConnectionRequest::clear_request_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_timeout_ = 0u;
}
inline ::uint32_t ConnectionRequest::request_timeout() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.request_timeout)
  return _internal_request_timeout();
}
inline void ConnectionRequest::set_request_timeout(::uint32_t value) {
  _internal_set_request_timeout(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.request_timeout)
}
inline ::uint32_t ConnectionRequest::_internal_request_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_timeout_;
}
inline void ConnectionRequest::_internal_set_request_timeout(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_timeout_ = value;
}

// .connection_request.ReadFrom read_from = 5;
inline void ConnectionRequest::clear_read_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_from_ = 0;
}
inline ::connection_request::ReadFrom ConnectionRequest::read_from() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.read_from)
  return _internal_read_from();
}
inline void ConnectionRequest::set_read_from(::connection_request::ReadFrom value) {
  _internal_set_read_from(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.read_from)
}
inline ::connection_request::ReadFrom ConnectionRequest::_internal_read_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::connection_request::ReadFrom>(_impl_.read_from_);
}
inline void ConnectionRequest::_internal_set_read_from(::connection_request::ReadFrom value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_from_ = value;
}

// .connection_request.ConnectionRetryStrategy connection_retry_strategy = 6;
inline bool ConnectionRequest::has_connection_retry_strategy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.connection_retry_strategy_ != nullptr);
  return value;
}
inline void ConnectionRequest::clear_connection_retry_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.connection_retry_strategy_ != nullptr) _impl_.connection_retry_strategy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::connection_request::ConnectionRetryStrategy& ConnectionRequest::_internal_connection_retry_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::connection_request::ConnectionRetryStrategy* p = _impl_.connection_retry_strategy_;
  return p != nullptr ? *p : reinterpret_cast<const ::connection_request::ConnectionRetryStrategy&>(::connection_request::_ConnectionRetryStrategy_default_instance_);
}
inline const ::connection_request::ConnectionRetryStrategy& ConnectionRequest::connection_retry_strategy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.connection_retry_strategy)
  return _internal_connection_retry_strategy();
}
inline void ConnectionRequest::unsafe_arena_set_allocated_connection_retry_strategy(::connection_request::ConnectionRetryStrategy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.connection_retry_strategy_);
  }
  _impl_.connection_retry_strategy_ = reinterpret_cast<::connection_request::ConnectionRetryStrategy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:connection_request.ConnectionRequest.connection_retry_strategy)
}
inline ::connection_request::ConnectionRetryStrategy* ConnectionRequest::release_connection_retry_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::connection_request::ConnectionRetryStrategy* released = _impl_.connection_retry_strategy_;
  _impl_.connection_retry_strategy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::connection_request::ConnectionRetryStrategy* ConnectionRequest::unsafe_arena_release_connection_retry_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.connection_retry_strategy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::connection_request::ConnectionRetryStrategy* temp = _impl_.connection_retry_strategy_;
  _impl_.connection_retry_strategy_ = nullptr;
  return temp;
}
inline ::connection_request::ConnectionRetryStrategy* ConnectionRequest::_internal_mutable_connection_retry_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.connection_retry_strategy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::connection_request::ConnectionRetryStrategy>(GetArena());
    _impl_.connection_retry_strategy_ = reinterpret_cast<::connection_request::ConnectionRetryStrategy*>(p);
  }
  return _impl_.connection_retry_strategy_;
}
inline ::connection_request::ConnectionRetryStrategy* ConnectionRequest::mutable_connection_retry_strategy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::connection_request::ConnectionRetryStrategy* _msg = _internal_mutable_connection_retry_strategy();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.connection_retry_strategy)
  return _msg;
}
inline void ConnectionRequest::set_allocated_connection_retry_strategy(::connection_request::ConnectionRetryStrategy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.connection_retry_strategy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.connection_retry_strategy_ = reinterpret_cast<::connection_request::ConnectionRetryStrategy*>(value);
  // @@protoc_insertion_point(field_set_allocated:connection_request.ConnectionRequest.connection_retry_strategy)
}

// .connection_request.AuthenticationInfo authentication_info = 7;
inline bool ConnectionRequest::has_authentication_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.authentication_info_ != nullptr);
  return value;
}
inline void ConnectionRequest::clear_authentication_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authentication_info_ != nullptr) _impl_.authentication_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::connection_request::AuthenticationInfo& ConnectionRequest::_internal_authentication_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::connection_request::AuthenticationInfo* p = _impl_.authentication_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::connection_request::AuthenticationInfo&>(::connection_request::_AuthenticationInfo_default_instance_);
}
inline const ::connection_request::AuthenticationInfo& ConnectionRequest::authentication_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.authentication_info)
  return _internal_authentication_info();
}
inline void ConnectionRequest::unsafe_arena_set_allocated_authentication_info(::connection_request::AuthenticationInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authentication_info_);
  }
  _impl_.authentication_info_ = reinterpret_cast<::connection_request::AuthenticationInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:connection_request.ConnectionRequest.authentication_info)
}
inline ::connection_request::AuthenticationInfo* ConnectionRequest::release_authentication_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::connection_request::AuthenticationInfo* released = _impl_.authentication_info_;
  _impl_.authentication_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::connection_request::AuthenticationInfo* ConnectionRequest::unsafe_arena_release_authentication_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.authentication_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::connection_request::AuthenticationInfo* temp = _impl_.authentication_info_;
  _impl_.authentication_info_ = nullptr;
  return temp;
}
inline ::connection_request::AuthenticationInfo* ConnectionRequest::_internal_mutable_authentication_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authentication_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::connection_request::AuthenticationInfo>(GetArena());
    _impl_.authentication_info_ = reinterpret_cast<::connection_request::AuthenticationInfo*>(p);
  }
  return _impl_.authentication_info_;
}
inline ::connection_request::AuthenticationInfo* ConnectionRequest::mutable_authentication_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::connection_request::AuthenticationInfo* _msg = _internal_mutable_authentication_info();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.authentication_info)
  return _msg;
}
inline void ConnectionRequest::set_allocated_authentication_info(::connection_request::AuthenticationInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.authentication_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.authentication_info_ = reinterpret_cast<::connection_request::AuthenticationInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:connection_request.ConnectionRequest.authentication_info)
}

// uint32 database_id = 8;
inline void ConnectionRequest::clear_database_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.database_id_ = 0u;
}
inline ::uint32_t ConnectionRequest::database_id() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.database_id)
  return _internal_database_id();
}
inline void ConnectionRequest::set_database_id(::uint32_t value) {
  _internal_set_database_id(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.database_id)
}
inline ::uint32_t ConnectionRequest::_internal_database_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.database_id_;
}
inline void ConnectionRequest::_internal_set_database_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.database_id_ = value;
}

// .connection_request.ProtocolVersion protocol = 9;
inline void ConnectionRequest::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = 0;
}
inline ::connection_request::ProtocolVersion ConnectionRequest::protocol() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.protocol)
  return _internal_protocol();
}
inline void ConnectionRequest::set_protocol(::connection_request::ProtocolVersion value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.protocol)
}
inline ::connection_request::ProtocolVersion ConnectionRequest::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::connection_request::ProtocolVersion>(_impl_.protocol_);
}
inline void ConnectionRequest::_internal_set_protocol(::connection_request::ProtocolVersion value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = value;
}

// string client_name = 10;
inline void ConnectionRequest::clear_client_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_name_.ClearToEmpty();
}
inline const std::string& ConnectionRequest::client_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.client_name)
  return _internal_client_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectionRequest::set_client_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.client_name)
}
inline std::string* ConnectionRequest::mutable_client_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_name();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.client_name)
  return _s;
}
inline const std::string& ConnectionRequest::_internal_client_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_name_.Get();
}
inline void ConnectionRequest::_internal_set_client_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_name_.Set(value, GetArena());
}
inline std::string* ConnectionRequest::_internal_mutable_client_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_name_.Mutable( GetArena());
}
inline std::string* ConnectionRequest::release_client_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.client_name)
  return _impl_.client_name_.Release();
}
inline void ConnectionRequest::set_allocated_client_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_name_.IsDefault()) {
          _impl_.client_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:connection_request.ConnectionRequest.client_name)
}

// .connection_request.PeriodicChecksManualInterval periodic_checks_manual_interval = 11;
inline bool ConnectionRequest::has_periodic_checks_manual_interval() const {
  return periodic_checks_case() == kPeriodicChecksManualInterval;
}
inline bool ConnectionRequest::_internal_has_periodic_checks_manual_interval() const {
  return periodic_checks_case() == kPeriodicChecksManualInterval;
}
inline void ConnectionRequest::set_has_periodic_checks_manual_interval() {
  _impl_._oneof_case_[0] = kPeriodicChecksManualInterval;
}
inline void ConnectionRequest::clear_periodic_checks_manual_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (periodic_checks_case() == kPeriodicChecksManualInterval) {
    if (GetArena() == nullptr) {
      delete _impl_.periodic_checks_.periodic_checks_manual_interval_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.periodic_checks_.periodic_checks_manual_interval_);
    }
    clear_has_periodic_checks();
  }
}
inline ::connection_request::PeriodicChecksManualInterval* ConnectionRequest::release_periodic_checks_manual_interval() {
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.periodic_checks_manual_interval)
  if (periodic_checks_case() == kPeriodicChecksManualInterval) {
    clear_has_periodic_checks();
    auto* temp = _impl_.periodic_checks_.periodic_checks_manual_interval_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.periodic_checks_.periodic_checks_manual_interval_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::connection_request::PeriodicChecksManualInterval& ConnectionRequest::_internal_periodic_checks_manual_interval() const {
  return periodic_checks_case() == kPeriodicChecksManualInterval ? *_impl_.periodic_checks_.periodic_checks_manual_interval_ : reinterpret_cast<::connection_request::PeriodicChecksManualInterval&>(::connection_request::_PeriodicChecksManualInterval_default_instance_);
}
inline const ::connection_request::PeriodicChecksManualInterval& ConnectionRequest::periodic_checks_manual_interval() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.periodic_checks_manual_interval)
  return _internal_periodic_checks_manual_interval();
}
inline ::connection_request::PeriodicChecksManualInterval* ConnectionRequest::unsafe_arena_release_periodic_checks_manual_interval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:connection_request.ConnectionRequest.periodic_checks_manual_interval)
  if (periodic_checks_case() == kPeriodicChecksManualInterval) {
    clear_has_periodic_checks();
    auto* temp = _impl_.periodic_checks_.periodic_checks_manual_interval_;
    _impl_.periodic_checks_.periodic_checks_manual_interval_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConnectionRequest::unsafe_arena_set_allocated_periodic_checks_manual_interval(::connection_request::PeriodicChecksManualInterval* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_periodic_checks();
  if (value) {
    set_has_periodic_checks_manual_interval();
    _impl_.periodic_checks_.periodic_checks_manual_interval_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:connection_request.ConnectionRequest.periodic_checks_manual_interval)
}
inline ::connection_request::PeriodicChecksManualInterval* ConnectionRequest::_internal_mutable_periodic_checks_manual_interval() {
  if (periodic_checks_case() != kPeriodicChecksManualInterval) {
    clear_periodic_checks();
    set_has_periodic_checks_manual_interval();
    _impl_.periodic_checks_.periodic_checks_manual_interval_ =
        ::google::protobuf::Message::DefaultConstruct<::connection_request::PeriodicChecksManualInterval>(GetArena());
  }
  return _impl_.periodic_checks_.periodic_checks_manual_interval_;
}
inline ::connection_request::PeriodicChecksManualInterval* ConnectionRequest::mutable_periodic_checks_manual_interval() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::connection_request::PeriodicChecksManualInterval* _msg = _internal_mutable_periodic_checks_manual_interval();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.periodic_checks_manual_interval)
  return _msg;
}

// .connection_request.PeriodicChecksDisabled periodic_checks_disabled = 12;
inline bool ConnectionRequest::has_periodic_checks_disabled() const {
  return periodic_checks_case() == kPeriodicChecksDisabled;
}
inline bool ConnectionRequest::_internal_has_periodic_checks_disabled() const {
  return periodic_checks_case() == kPeriodicChecksDisabled;
}
inline void ConnectionRequest::set_has_periodic_checks_disabled() {
  _impl_._oneof_case_[0] = kPeriodicChecksDisabled;
}
inline void ConnectionRequest::clear_periodic_checks_disabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (periodic_checks_case() == kPeriodicChecksDisabled) {
    if (GetArena() == nullptr) {
      delete _impl_.periodic_checks_.periodic_checks_disabled_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.periodic_checks_.periodic_checks_disabled_);
    }
    clear_has_periodic_checks();
  }
}
inline ::connection_request::PeriodicChecksDisabled* ConnectionRequest::release_periodic_checks_disabled() {
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.periodic_checks_disabled)
  if (periodic_checks_case() == kPeriodicChecksDisabled) {
    clear_has_periodic_checks();
    auto* temp = _impl_.periodic_checks_.periodic_checks_disabled_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.periodic_checks_.periodic_checks_disabled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::connection_request::PeriodicChecksDisabled& ConnectionRequest::_internal_periodic_checks_disabled() const {
  return periodic_checks_case() == kPeriodicChecksDisabled ? *_impl_.periodic_checks_.periodic_checks_disabled_ : reinterpret_cast<::connection_request::PeriodicChecksDisabled&>(::connection_request::_PeriodicChecksDisabled_default_instance_);
}
inline const ::connection_request::PeriodicChecksDisabled& ConnectionRequest::periodic_checks_disabled() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.periodic_checks_disabled)
  return _internal_periodic_checks_disabled();
}
inline ::connection_request::PeriodicChecksDisabled* ConnectionRequest::unsafe_arena_release_periodic_checks_disabled() {
  // @@protoc_insertion_point(field_unsafe_arena_release:connection_request.ConnectionRequest.periodic_checks_disabled)
  if (periodic_checks_case() == kPeriodicChecksDisabled) {
    clear_has_periodic_checks();
    auto* temp = _impl_.periodic_checks_.periodic_checks_disabled_;
    _impl_.periodic_checks_.periodic_checks_disabled_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConnectionRequest::unsafe_arena_set_allocated_periodic_checks_disabled(::connection_request::PeriodicChecksDisabled* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_periodic_checks();
  if (value) {
    set_has_periodic_checks_disabled();
    _impl_.periodic_checks_.periodic_checks_disabled_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:connection_request.ConnectionRequest.periodic_checks_disabled)
}
inline ::connection_request::PeriodicChecksDisabled* ConnectionRequest::_internal_mutable_periodic_checks_disabled() {
  if (periodic_checks_case() != kPeriodicChecksDisabled) {
    clear_periodic_checks();
    set_has_periodic_checks_disabled();
    _impl_.periodic_checks_.periodic_checks_disabled_ =
        ::google::protobuf::Message::DefaultConstruct<::connection_request::PeriodicChecksDisabled>(GetArena());
  }
  return _impl_.periodic_checks_.periodic_checks_disabled_;
}
inline ::connection_request::PeriodicChecksDisabled* ConnectionRequest::mutable_periodic_checks_disabled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::connection_request::PeriodicChecksDisabled* _msg = _internal_mutable_periodic_checks_disabled();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.periodic_checks_disabled)
  return _msg;
}

// .connection_request.PubSubSubscriptions pubsub_subscriptions = 13;
inline bool ConnectionRequest::has_pubsub_subscriptions() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pubsub_subscriptions_ != nullptr);
  return value;
}
inline void ConnectionRequest::clear_pubsub_subscriptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pubsub_subscriptions_ != nullptr) _impl_.pubsub_subscriptions_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::connection_request::PubSubSubscriptions& ConnectionRequest::_internal_pubsub_subscriptions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::connection_request::PubSubSubscriptions* p = _impl_.pubsub_subscriptions_;
  return p != nullptr ? *p : reinterpret_cast<const ::connection_request::PubSubSubscriptions&>(::connection_request::_PubSubSubscriptions_default_instance_);
}
inline const ::connection_request::PubSubSubscriptions& ConnectionRequest::pubsub_subscriptions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.pubsub_subscriptions)
  return _internal_pubsub_subscriptions();
}
inline void ConnectionRequest::unsafe_arena_set_allocated_pubsub_subscriptions(::connection_request::PubSubSubscriptions* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pubsub_subscriptions_);
  }
  _impl_.pubsub_subscriptions_ = reinterpret_cast<::connection_request::PubSubSubscriptions*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:connection_request.ConnectionRequest.pubsub_subscriptions)
}
inline ::connection_request::PubSubSubscriptions* ConnectionRequest::release_pubsub_subscriptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::connection_request::PubSubSubscriptions* released = _impl_.pubsub_subscriptions_;
  _impl_.pubsub_subscriptions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::connection_request::PubSubSubscriptions* ConnectionRequest::unsafe_arena_release_pubsub_subscriptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.pubsub_subscriptions)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::connection_request::PubSubSubscriptions* temp = _impl_.pubsub_subscriptions_;
  _impl_.pubsub_subscriptions_ = nullptr;
  return temp;
}
inline ::connection_request::PubSubSubscriptions* ConnectionRequest::_internal_mutable_pubsub_subscriptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pubsub_subscriptions_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::connection_request::PubSubSubscriptions>(GetArena());
    _impl_.pubsub_subscriptions_ = reinterpret_cast<::connection_request::PubSubSubscriptions*>(p);
  }
  return _impl_.pubsub_subscriptions_;
}
inline ::connection_request::PubSubSubscriptions* ConnectionRequest::mutable_pubsub_subscriptions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::connection_request::PubSubSubscriptions* _msg = _internal_mutable_pubsub_subscriptions();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.pubsub_subscriptions)
  return _msg;
}
inline void ConnectionRequest::set_allocated_pubsub_subscriptions(::connection_request::PubSubSubscriptions* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pubsub_subscriptions_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pubsub_subscriptions_ = reinterpret_cast<::connection_request::PubSubSubscriptions*>(value);
  // @@protoc_insertion_point(field_set_allocated:connection_request.ConnectionRequest.pubsub_subscriptions)
}

// uint32 inflight_requests_limit = 14;
inline void ConnectionRequest::clear_inflight_requests_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inflight_requests_limit_ = 0u;
}
inline ::uint32_t ConnectionRequest::inflight_requests_limit() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.inflight_requests_limit)
  return _internal_inflight_requests_limit();
}
inline void ConnectionRequest::set_inflight_requests_limit(::uint32_t value) {
  _internal_set_inflight_requests_limit(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.inflight_requests_limit)
}
inline ::uint32_t ConnectionRequest::_internal_inflight_requests_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inflight_requests_limit_;
}
inline void ConnectionRequest::_internal_set_inflight_requests_limit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inflight_requests_limit_ = value;
}

// string client_az = 15;
inline void ConnectionRequest::clear_client_az() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_az_.ClearToEmpty();
}
inline const std::string& ConnectionRequest::client_az() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRequest.client_az)
  return _internal_client_az();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectionRequest::set_client_az(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_az_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRequest.client_az)
}
inline std::string* ConnectionRequest::mutable_client_az() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_az();
  // @@protoc_insertion_point(field_mutable:connection_request.ConnectionRequest.client_az)
  return _s;
}
inline const std::string& ConnectionRequest::_internal_client_az() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_az_.Get();
}
inline void ConnectionRequest::_internal_set_client_az(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_az_.Set(value, GetArena());
}
inline std::string* ConnectionRequest::_internal_mutable_client_az() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_az_.Mutable( GetArena());
}
inline std::string* ConnectionRequest::release_client_az() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:connection_request.ConnectionRequest.client_az)
  return _impl_.client_az_.Release();
}
inline void ConnectionRequest::set_allocated_client_az(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_az_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.client_az_.IsDefault()) {
          _impl_.client_az_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:connection_request.ConnectionRequest.client_az)
}

inline bool ConnectionRequest::has_periodic_checks() const {
  return periodic_checks_case() != PERIODIC_CHECKS_NOT_SET;
}
inline void ConnectionRequest::clear_has_periodic_checks() {
  _impl_._oneof_case_[0] = PERIODIC_CHECKS_NOT_SET;
}
inline ConnectionRequest::PeriodicChecksCase ConnectionRequest::periodic_checks_case() const {
  return ConnectionRequest::PeriodicChecksCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ConnectionRetryStrategy

// uint32 number_of_retries = 1;
inline void ConnectionRetryStrategy::clear_number_of_retries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_retries_ = 0u;
}
inline ::uint32_t ConnectionRetryStrategy::number_of_retries() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRetryStrategy.number_of_retries)
  return _internal_number_of_retries();
}
inline void ConnectionRetryStrategy::set_number_of_retries(::uint32_t value) {
  _internal_set_number_of_retries(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRetryStrategy.number_of_retries)
}
inline ::uint32_t ConnectionRetryStrategy::_internal_number_of_retries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_of_retries_;
}
inline void ConnectionRetryStrategy::_internal_set_number_of_retries(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_retries_ = value;
}

// uint32 factor = 2;
inline void ConnectionRetryStrategy::clear_factor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.factor_ = 0u;
}
inline ::uint32_t ConnectionRetryStrategy::factor() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRetryStrategy.factor)
  return _internal_factor();
}
inline void ConnectionRetryStrategy::set_factor(::uint32_t value) {
  _internal_set_factor(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRetryStrategy.factor)
}
inline ::uint32_t ConnectionRetryStrategy::_internal_factor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.factor_;
}
inline void ConnectionRetryStrategy::_internal_set_factor(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.factor_ = value;
}

// uint32 exponent_base = 3;
inline void ConnectionRetryStrategy::clear_exponent_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exponent_base_ = 0u;
}
inline ::uint32_t ConnectionRetryStrategy::exponent_base() const {
  // @@protoc_insertion_point(field_get:connection_request.ConnectionRetryStrategy.exponent_base)
  return _internal_exponent_base();
}
inline void ConnectionRetryStrategy::set_exponent_base(::uint32_t value) {
  _internal_set_exponent_base(value);
  // @@protoc_insertion_point(field_set:connection_request.ConnectionRetryStrategy.exponent_base)
}
inline ::uint32_t ConnectionRetryStrategy::_internal_exponent_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exponent_base_;
}
inline void ConnectionRetryStrategy::_internal_set_exponent_base(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exponent_base_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace connection_request


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::connection_request::ReadFrom> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::connection_request::ReadFrom>() {
  return ::connection_request::ReadFrom_descriptor();
}
template <>
struct is_proto_enum<::connection_request::TlsMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::connection_request::TlsMode>() {
  return ::connection_request::TlsMode_descriptor();
}
template <>
struct is_proto_enum<::connection_request::ProtocolVersion> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::connection_request::ProtocolVersion>() {
  return ::connection_request::ProtocolVersion_descriptor();
}
template <>
struct is_proto_enum<::connection_request::PubSubChannelType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::connection_request::PubSubChannelType>() {
  return ::connection_request::PubSubChannelType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_connection_5frequest_2eproto_2epb_2eh
