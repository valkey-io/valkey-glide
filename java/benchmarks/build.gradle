plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "com.google.osdetector" version "1.7.3"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

dependencies {
    version = System.getenv("GLIDE_RELEASE_VERSION") ?: project.ext.defaultReleaseVersion

    implementation "io.valkey:valkey-glide:${version}:${osdetector.classifier}"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation 'redis.clients:jedis:5.1.2'
    implementation 'io.lettuce:lettuce-core:6.2.6.RELEASE'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0'
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.5'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
}

if (!System.getenv("GLIDE_RELEASE_VERSION")) {
    compileJava.dependsOn ':client:publishToMavenLocal'
}

application {
    // Define the main class for the application.
    mainClass = 'glide.benchmarks.BenchmarkingApp'
    // Runs for GITHUB_ACTIONS for testing release Maven deployment. Force benchmarks to use glide-rs from Maven Central
    // deployments.
    if (!System.getenv("ORG_GRADLE_PROJECT_centralManualTestingAuthHeaderName")) {
        applicationDefaultJvmArgs = ['-Djava.library.path=../target/release']
    }
}
